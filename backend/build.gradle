plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

bootJar.enabled = false

repositories {
    mavenCentral()
}

subprojects {
    group = 'com.depromeet'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '21'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok:1.18.34'
        testImplementation 'junit:junit:4.13.1'
    }
}

jacocoTestReport {
    reports {
        html.required.set(true)
        xml.required.set(true)
        csv.required.set(false)
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
    def QueryDslDomains = []
    for (qPattern in '**/QA'..'**/QZ') {
        QueryDslDomains.add(qPattern + '*')
    }
    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, excludes: [
                            "**/*Application*",
                            "**/*Config*",
                            "**/*Dto*",
                            "**/*Request*",
                            "**/*Response*",
                            "**/*Interceptor*",
                            "**/*Exception*"
                    ] + QueryDslDomains)
                })
        )
    }
    finalizedBy jacocoTestCoverageVerification
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}