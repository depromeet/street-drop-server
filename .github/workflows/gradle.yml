name: Street Drop Server CI/CD

on:
  push:
    branches: [ "config/deploy" ]
    
jobs:
  deploy:
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      working-directory: ./backend
      run: chmod +x gradlew

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Execute Gradle build
      working-directory: ./backend
      run: ./gradlew clean build --exclude-task test

    - name: Docker Image Build
      run: docker build -t yunyoung18190/street-drop-api-server .

    - name: Login To DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: DockerHub Push
      run: docker push yunyoung18190/street-drop-api-server

    - name: Get Github IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Add GitHub IP to AWS
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        password: ${{ secrets.EC2_PASSWORD }}
        port: ${{ secrets.EC2_SSH_PORT }}
        timeout: 60s
        script: |
          DB_HOST=${{ secrets.DB_HOST }}
          echo "DB_HOST: $DB_HOST"
          cd street-drop-server/
          sudo docker rm - f $(docker ps -qa)
          sudo docker pull yunyoung18190/street-drop-api-server:latest
          sudo docker run -d yunyoung18190/street-drop-api-server:latest \
            --name street-drop-api \
            -p 8080:8080 street-drop-api \
            -e "DB_HOST=$DB_HOST"

    - name: Remove IP FROM security group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32